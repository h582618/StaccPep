@inject IHttpClientFactory ClientFactory
@page "/Person"
@using StaccKodeOppgave.Models;
@using Newtonsoft.Json;
<div class="pepdiv">

    @if (!orgPepCheck)
    {
        <h3>PEP Check</h3>
        <input @bind="name" placeholder="Navn">
        <button @onclick="@(() => getPersonData())"> Søk</button>
        <br />
        <br />
    }
    @if (pep != null && pep.hits != null && pep.numberOfHits > 0)
    {
        <h5> Number of hits @pep.numberOfHits</h5>
        @foreach (Person p in pep.hits)
        {

            <div class="person">

                <div class="img">

                    <img src="person.png" />
                </div>
                <div class="pers_inf">
                    <p> <b> Navn </b></p>
                    <p> @p.name</p>
                    @if (p.score > 0)
                    {
                        <p> <b> Score </b></p>
                        <p> @Math.Round(p.score, 5) </p>
                    }
                    <p> <b> Fødselsdato </b></p>
                    <p> @p.birth_date </p>
                    <p> <b> Dataset </b></p>
                    <p> @p.dataset </p>
                </div>

            </div>
        }
    }
    else if (dataPers != null)
    {
        <br />
        <h5>  @dataPers </h5>
    }
    else if (orgPepCheck && pep == null)
    {
        <br />
        <h5> Not a pep </h5>
    }



</div>
@code {

    [Parameter]
    public String name { get; set; }

    [Parameter]
    public bool orgPepCheck { get; set; }


    [Parameter]
    public Pep pep { get; set; }

    int orgnr { get; set; }

    string baseurl = "https://stacc-code-challenge-2021.azurewebsites.net"; //https://localhost:6044

    String dataPers { get; set; }

    String dataOrg { get; set; }

    


    protected async Task getPersonData()
    {

        var request = new HttpRequestMessage(HttpMethod.Get,
        baseurl + "/api/pep?name=" + name);

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);
        if (response.IsSuccessStatusCode)
        {
            pep = JsonConvert.DeserializeObject<Pep>(await response.Content.ReadAsStringAsync());
            dataPers = null;
        }
        else
        {
            dataPers = "Not a pep";
        }
    }

}
